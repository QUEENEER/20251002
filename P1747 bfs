#include <bits/stdc++.h>
using namespace std;
#define int long long
#define piii pair<int,int>
//sort(puch,puch+n,greater<int>());
struct place{
	int u,v;
};
vector<place>s;
bool cmp(place x,place y){
	if(x.v==y.v){
		return x.u<y.u;
	}
	else return x.v<y.v;
}
int ans;
char arr[1001][1001];
int d[1001][1001];
int vis[1001][1001];
int dx[12]={-1,-2,-2,-1,1,2,2,1,-2,-2,2,2}, dy[12]={-2,-1,1,2,2,1,-1,-2,-2,2,2,-2};
int x1,y011,x2,y2;

void solve1(){
	queue<piii>q;
	
	memset(d,0,sizeof(d));
	memset(vis,0,sizeof(vis));
	q.push({x1,y011});
	d[x1][y011]=0;
	vis[x1][y011]=1;
	while(!q.empty()){
		auto&[xx,yy]=q.front();
		q.pop();
		for(int i=0;i<12;i++){
			int nx=xx+dx[i];
			int ny=yy+dy[i];
			if(nx<1||nx>20||ny<1||ny>20||vis[nx][ny]!=0){
				continue;
			}
			vis[nx][ny]=1;
			d[nx][ny]=d[xx][yy]+1;
			q.push({nx,ny});
		}
	}
	cout<<d[1][1];
	
}
void solve2(){
	queue<piii>q;
	
	memset(d,0,sizeof(d));
	memset(vis,0,sizeof(vis));
	q.push({x2,y2});
	d[x2][y2]=0;
	vis[x2][y2]=1;
	while(!q.empty()){
		auto&[xx,yy]=q.front();
		q.pop();
		for(int i=0;i<12;i++){
			int nx=xx+dx[i];
			int ny=yy+dy[i];
			if(nx<1||nx>20||ny<1||ny>20||vis[nx][ny]!=0){
				continue;
			}
			vis[nx][ny]=1;
			d[nx][ny]=d[xx][yy]+1;
			q.push({nx,ny});
		}
	}
	cout<<d[1][1];
	
}
signed main(){
	cin>>x1>>y011>>x2>>y2;
	solve1();
	solve2();
}        
